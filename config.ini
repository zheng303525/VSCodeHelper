[MONITOR]
# 检查间隔（秒）
check_interval = 30

# VS Code窗口标题关键词
vscode_window_title = Visual Studio Code

# GitHub Copilot Chat面板标识
chat_panel_title = GitHub Copilot Chat

# 是否防止屏幕息屏和锁屏（推荐开启）
prevent_sleep = true

[AUTOMATION]
# 发送的继续命令
continue_command = continue

# 备用继续命令（中文）
continue_command_alt = 继续

# 点击发送按钮前的等待时间（秒）
send_delay = 1.0

# 输入文本后的等待时间（秒）
input_delay = 0.5

[DETECTION]
# 表示停止状态的关键词（用逗号分隔）
stopped_keywords = stopped,completed,finished,done,等待,完成

# 表示运行状态的关键词（用逗号分隔）
running_keywords = thinking,processing,generating,working,运行中,处理中

# OCR识别置信度阈值
ocr_confidence = 0.6

[LOGGING]
# 日志级别：DEBUG, INFO, WARNING, ERROR
log_level = INFO

# 日志文件路径
log_file = copilot_monitor.log

# 是否输出到控制台
console_output = true

[ADVANCED]
# 高级监控功能配置（用于锁屏状态下的监控）

# 是否启用进程监控
use_process_monitoring = true

# 是否启用日志文件监控
use_log_monitoring = true

# 是否启用文件系统监控
use_filesystem_monitoring = true

# Copilot无活动的时间阈值（秒），超过此时间将触发干预
inactivity_threshold = 300

# 是否在锁屏状态下尝试自动化操作
automation_in_locked_screen = true 